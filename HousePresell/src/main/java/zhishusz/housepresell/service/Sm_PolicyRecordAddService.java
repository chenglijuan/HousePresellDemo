package zhishusz.housepresell.service;import org.apache.commons.lang.StringUtils;import zhishusz.housepresell.controller.form.Sm_PolicyRecordForm;import zhishusz.housepresell.database.dao.Sm_PolicyRecordDao;import zhishusz.housepresell.database.po.Sm_PolicyRecord;import zhishusz.housepresell.database.po.Sm_User;import zhishusz.housepresell.database.po.state.S_NormalFlag;import zhishusz.housepresell.database.po.state.S_TheState;import zhishusz.housepresell.util.MyBackInfo;import zhishusz.housepresell.util.MyProperties;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import zhishusz.housepresell.util.MyString;import java.util.Properties;import javax.transaction.Transactional;/* * Service添加操作：政策公告 * Company：ZhiShuSZ */@Service@Transactionalpublic class Sm_PolicyRecordAddService{	@Autowired	private Sm_PolicyRecordDao sm_PolicyRecordDao;// 政策公告	public Properties execute(Sm_PolicyRecordForm model)	{		Properties properties = new MyProperties();		Sm_User user = model.getUser();		if (null == user)		{			return MyBackInfo.fail(properties, "登录信息已失效，请重新登录！");		}		// 公告类型		String policyType = model.getPolicyType();		// 公告类型编码		String policyTypeCode = model.getPolicyTypeCode();		// 发布时间		String policyDate = model.getPolicyDate();		// 公告标题		String policyTitle = model.getPolicyTitle();		// 公告内容		String policyContent = model.getPolicyContent();		//公告状态		String policyState = model.getPolicyState();		if (null == policyType || policyType.trim().isEmpty())		{			return MyBackInfo.fail(properties, "请选择公告类型");		}		if (null == policyTypeCode || policyTypeCode.trim().isEmpty())		{			return MyBackInfo.fail(properties, "请选择公告类型编码");		}		if(StringUtils.isNotBlank(policyContent)){			policyContent = MyString.sqlInject(policyContent);		}		Integer theState = S_TheState.Normal;		Sm_PolicyRecord sm_PolicyRecord = new Sm_PolicyRecord();		sm_PolicyRecord.setTheState(theState);		sm_PolicyRecord.setUserStart(user);		sm_PolicyRecord.setUserUpdate(user);		sm_PolicyRecord.setCreateTimeStamp(System.currentTimeMillis());		sm_PolicyRecord.setLastUpdateTimeStamp(System.currentTimeMillis());		//置顶及轮播，默认0：否		sm_PolicyRecord.setPolicyIsbrow("0");		sm_PolicyRecord.setPolicyIstop("0");				sm_PolicyRecord.setPolicyType(policyType);		sm_PolicyRecord.setPolicyTypeCode(policyTypeCode);		sm_PolicyRecord.setPolicyDate(policyDate);		sm_PolicyRecord.setPolicyTitle(policyTitle);		sm_PolicyRecord.setPolicyContent(policyContent);		sm_PolicyRecord.setPolicyState(policyState);						sm_PolicyRecordDao.save(sm_PolicyRecord);		properties.put(S_NormalFlag.result, S_NormalFlag.success);		properties.put(S_NormalFlag.info, S_NormalFlag.info_Success);		properties.put("tableId", sm_PolicyRecord.getTableId());		return properties;	}}