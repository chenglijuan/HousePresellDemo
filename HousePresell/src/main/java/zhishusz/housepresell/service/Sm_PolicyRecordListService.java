package zhishusz.housepresell.service;import zhishusz.housepresell.controller.form.Sm_PolicyRecordForm;import zhishusz.housepresell.database.dao.Sm_PolicyRecordDao;import zhishusz.housepresell.database.po.Sm_PolicyRecord;import zhishusz.housepresell.database.po.state.S_NormalFlag;import zhishusz.housepresell.database.po.state.S_TheState;import zhishusz.housepresell.util.Checker;import zhishusz.housepresell.util.MyProperties;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.ArrayList;import java.util.List;import java.util.Properties;import javax.transaction.Transactional;/* * Service列表操作：政策公告 * Company：ZhiShuSZ */@Service@Transactionalpublic class Sm_PolicyRecordListService{	@Autowired	private Sm_PolicyRecordDao sm_PolicyRecordDao;// 政策公告	@SuppressWarnings("unchecked")	public Properties execute(Sm_PolicyRecordForm model)	{		Properties properties = new MyProperties();		Integer pageNumber = Checker.getInstance().checkPageNumber(model.getPageNumber());		Integer countPerPage = Checker.getInstance().checkCountPerPage(model.getCountPerPage());		String keyword_Old = model.getKeyword();		String keyword = Checker.getInstance().checkKeyword(model.getKeyword());		model.setKeyword(keyword);		model.setTheState(S_TheState.Normal);		// 公告类型名称		String policyType = model.getPolicyType();		if (null == policyType || policyType.trim().isEmpty())		{			model.setPolicyType(null);		}		else		{			model.setPolicyType(policyType.trim());		}		// 公告类型编码		String policyTypeCode = model.getPolicyTypeCode();		if (null == policyTypeCode || policyTypeCode.trim().isEmpty())		{			model.setPolicyTypeCode(null);		}		else		{			model.setPolicyTypeCode(policyTypeCode.trim());		}		Integer totalCount = sm_PolicyRecordDao				.findByPage_Size(sm_PolicyRecordDao.getQuery_Size(sm_PolicyRecordDao.getBasicHQL(), model));		Integer totalPage = totalCount / countPerPage;		if (totalCount % countPerPage > 0)			totalPage++;		if (pageNumber > totalPage && totalPage != 0)			pageNumber = totalPage;		List<Sm_PolicyRecord> sm_PolicyRecordList;		if (totalCount > 0)		{			sm_PolicyRecordList = sm_PolicyRecordDao.findByPage(					sm_PolicyRecordDao.getQuery(sm_PolicyRecordDao.getBasicHQL(), model), pageNumber, countPerPage);		}		else		{			sm_PolicyRecordList = new ArrayList<Sm_PolicyRecord>();		}		properties.put("sm_PolicyRecordList", sm_PolicyRecordList);		properties.put(S_NormalFlag.keyword, keyword_Old);		properties.put(S_NormalFlag.totalPage, totalPage);		properties.put(S_NormalFlag.pageNumber, pageNumber);		properties.put(S_NormalFlag.countPerPage, countPerPage);		properties.put(S_NormalFlag.totalCount, totalCount);		properties.put(S_NormalFlag.result, S_NormalFlag.success);		properties.put(S_NormalFlag.info, S_NormalFlag.info_Success);		return properties;	}}