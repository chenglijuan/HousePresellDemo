package zhishusz.housepresell.service;import org.apache.commons.lang.StringUtils;import zhishusz.housepresell.controller.form.Sm_PolicyRecordForm;import zhishusz.housepresell.database.dao.Sm_PolicyRecordDao;import zhishusz.housepresell.database.po.Sm_PolicyRecord;import zhishusz.housepresell.database.po.Sm_User;import zhishusz.housepresell.database.po.state.S_NormalFlag;import zhishusz.housepresell.database.po.state.S_PolicyState;import zhishusz.housepresell.util.MyBackInfo;import zhishusz.housepresell.util.MyProperties;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import zhishusz.housepresell.util.MyString;import java.util.Properties;import javax.transaction.Transactional;/* * Service更新操作：政策公告 * Company：ZhiShuSZ */@Service@Transactionalpublic class Sm_PolicyRecordUpdateService{	@Autowired	private Sm_PolicyRecordDao sm_PolicyRecordDao;// 政策公告	public Properties execute(Sm_PolicyRecordForm model)	{		Properties properties = new MyProperties();		Long tableId = model.getTableId();		if (null == tableId || tableId < 1)		{			return MyBackInfo.fail(properties, "请选择需要修改的公告");		}		Sm_User user = model.getUser();		if (null == user)		{			return MyBackInfo.fail(properties, "登录信息已失效，请重新登录！");		}		// 公告类型		String policyType = model.getPolicyType();		// 公告类型编码		String policyTypeCode = model.getPolicyTypeCode();		// 发布时间		String policyDate = model.getPolicyDate();		// 公告标题		String policyTitle = model.getPolicyTitle();		// 公告内容		String policyContent = model.getPolicyContent();		// 公告状态		String policyState = model.getPolicyState();		if(StringUtils.isNotBlank(policyContent)){			policyContent = MyString.sqlInject(policyContent);		}		/*		 * xsz by time 2019-1-12 17:50:35		 * 如果公告状态为 发布 1 和撤回 2 S_PolicyState		 * 则直接修改公告状态即可		 */		Sm_PolicyRecord sm_PolicyRecord = new Sm_PolicyRecord();		sm_PolicyRecord = sm_PolicyRecordDao.findById(tableId);		if (S_PolicyState.WaitRelease.equals(policyState))		{			// 保存			if (null == policyType || policyType.trim().isEmpty())			{				return MyBackInfo.fail(properties, "请选择公告类型");			}			if (null == policyTypeCode || policyTypeCode.trim().isEmpty())			{				return MyBackInfo.fail(properties, "请选择公告类型编码");			}			sm_PolicyRecord = sm_PolicyRecordDao.findById(tableId);			if (null == sm_PolicyRecord)			{				return MyBackInfo.fail(properties, "该公告信息已失效，请刷新后重试！");			}			sm_PolicyRecord.setPolicyType(policyType);			sm_PolicyRecord.setPolicyTypeCode(policyTypeCode);			sm_PolicyRecord.setPolicyDate(policyDate);			sm_PolicyRecord.setPolicyTitle(policyTitle);			sm_PolicyRecord.setPolicyContent(policyContent);		}		else if (S_PolicyState.Releaseing.equals(policyState))		{			//修改页直接发布			if(null!=policyType&&!policyType.trim().isEmpty())			sm_PolicyRecord.setPolicyType(policyType);			if(null!=policyTypeCode&&!policyTypeCode.trim().isEmpty())			sm_PolicyRecord.setPolicyTypeCode(policyTypeCode);			if(null!=policyDate&&!policyDate.trim().isEmpty())			sm_PolicyRecord.setPolicyDate(policyDate);			if(null!=policyTitle&&!policyTitle.trim().isEmpty())			sm_PolicyRecord.setPolicyTitle(policyTitle);			if(null!=policyContent&&!policyContent.trim().isEmpty())			sm_PolicyRecord.setPolicyContent(policyContent);					}		sm_PolicyRecord.setUserUpdate(user);		sm_PolicyRecord.setLastUpdateTimeStamp(System.currentTimeMillis());		sm_PolicyRecord.setPolicyState(policyState);		sm_PolicyRecordDao.save(sm_PolicyRecord);		properties.put(S_NormalFlag.result, S_NormalFlag.success);		properties.put(S_NormalFlag.info, S_NormalFlag.info_Success);		return properties;	}}